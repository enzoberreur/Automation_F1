apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream-processor
  labels:
    app: stream-processor
    component: telemetry-processor
spec:
  replicas: 3  # 3 réplicas pour traiter le flux
  selector:
    matchLabels:
      app: stream-processor
  template:
    metadata:
      labels:
        app: stream-processor
        component: telemetry-processor
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: stream-processor
        image: ferrari-stream-processor:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        env:
        # Mode de fonctionnement
        - name: PROCESSOR_MODE
          value: "rest"
        
        # Configuration du port
        - name: PORT
          value: "8001"
        
        # Logging
        - name: LOG_LEVEL
          value: "INFO"
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Startup probe pour permettre un démarrage lent
        startupProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: stream-processor
  labels:
    app: stream-processor
spec:
  selector:
    app: stream-processor
  ports:
    - name: http
      protocol: TCP
      port: 8001
      targetPort: 8001
    - name: metrics
      protocol: TCP
      port: 9090
      targetPort: 8001
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stream-processor-config
data:
  # Configuration du processeur
  processor.mode: "rest"
  port: "8001"
  
  # Seuils d'anomalies
  anomaly.brake.temp.threshold: "950"
  anomaly.tire.temp.threshold: "130"
  anomaly.detection.window: "2"
  
  # Performance
  max.history.size: "100"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: stream-processor-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: stream-processor
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 5
        periodSeconds: 15
      selectPolicy: Max
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: stream-processor-monitor
  labels:
    app: stream-processor
spec:
  selector:
    matchLabels:
      app: stream-processor
  endpoints:
  - port: metrics
    path: /metrics
    interval: 15s
    scrapeTimeout: 10s
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: stream-processor-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: stream-processor
