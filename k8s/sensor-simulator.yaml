apiVersion: apps/v1
kind: Deployment
metadata:
  name: sensor-simulator
  labels:
    app: sensor-simulator
    component: telemetry-generator
spec:
  replicas: 2  # 2 réplicas pour haute disponibilité
  selector:
    matchLabels:
      app: sensor-simulator
  template:
    metadata:
      labels:
        app: sensor-simulator
        component: telemetry-generator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: sensor-simulator
        image: ferrari-sensor-simulator:latest
        imagePullPolicy: IfNotPresent
        env:
        # Mode de fonctionnement
        - name: TELEMETRY_MODE
          value: "kafka"
        
        # Identité de la voiture
        - name: CAR_ID
          value: "Ferrari-F1-75"
        - name: DRIVER
          value: "Charles_Leclerc"
        
        # Performance - 1500 msg/s par pod
        - name: TARGET_THROUGHPUT
          value: "1500"
        
        # Configuration Kafka
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        - name: KAFKA_TOPIC
          value: "ferrari-telemetry"
        
        # Configuration HTTP (alternative)
        - name: HTTP_ENDPOINT
          value: "http://stream-processor:8001/telemetry"
        
        # Anomalies
        - name: ANOMALY_PROBABILITY
          value: "0.02"
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        
        # Health checks
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: sensor-simulator
  labels:
    app: sensor-simulator
spec:
  selector:
    app: sensor-simulator
  ports:
    - name: metrics
      protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sensor-simulator-config
data:
  # Configuration globale
  telemetry.mode: "kafka"
  performance.target.throughput: "1500"
  anomaly.probability: "0.02"
  
  # Kafka
  kafka.bootstrap.servers: "kafka:9092"
  kafka.topic: "ferrari-telemetry"
  
  # HTTP
  http.endpoint: "http://stream-processor:8001/telemetry"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sensor-simulator-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sensor-simulator
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
